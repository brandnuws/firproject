spring.devtools.livereload.enabled=true

spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html
spring.thymeleaf.cache=false
spring.thymeleaf.check-template-location=true


# MySQL 설정
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# DB Source URL
spring.datasource.url=jdbc:mysql://211.253.17.42:26033/KEVCSVS?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul

# DB username
spring.datasource.username=kevcsadm

# DB password
spring.datasource.password=Kevcs$$2020

# true 설정시 JPA 쿼리문 확인 가능
spring.jpa.show-sql=true

# DDL(create, alter, drop) 정의시 DB의 고유 기능을 사용할 수 있다.
#create : drop > create
#create-drop : drop > create > 애플리케이션 종료시점에 drop
#update : 변경분만 반영하기 (alter, 엔티티 컬럼 추가된거만 반영. 삭제된건 반영되지 않음)
#validate : 엔티티와 테이블이 정상적으로 매핑되었나 검증
#none : 사용하지 않음 

spring.jpa.hibernate.ddl-auto=none

# JPA의 구현체인 Hibernate가 동작하면서 발생한 SQL의 가독성을 높여준다.
spring.jpa.properties.hibernate.format_sql=true

spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect

spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl